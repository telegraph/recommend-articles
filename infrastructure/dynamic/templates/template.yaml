AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation to launch a service.
Parameters:
  ApplicationName:
    Description: The application name
    Type: String
  DeploymentEnv:
    Description: The environment to refer to this component stack
    Type: String
  CloudFormationBucket:
    Description: CloudFormation Bucket 
    Type: String
  CloudFormationKey:
    Description: CloudFormation Key
    Type: String
  CloudFormationCommonKey:
    Description: CloudFormation Key
    Type: String
    Default: common/latest
  BuildVersion:
    Description: The version of the build
    Type: String
  NotificationTaskCpuAllocation:
    Description: CPU allocation of notification the task
    Type: String
    Default: 512
  NotificationTaskMemoryAllocation:
    Description: Memory allocation of notification the task
    Type: String
    Default: 2048
  NotificationDesiredCount:
    Description: Desired count of the notification task
    Type: String
    Default: 2
  EnvECSClusterStack:
    Description: ECS Cluster Repository
    Type: String
  EnvAlbPublicStack:
    Description: Alb Public Stack
    Type: String
  VpcId:
    Description: Application VPC
    Type: String
  EmailingList:
    Description: Emailing List
    Type: String
    Default: arn:aws:sns:eu-west-1:385050320367:platforms-test
  DeregistrationDelay:
    Description: The amount time for Load Balancing to wait before changing the state of a deregistering target from draining to unused
    Type: String
    Default: 120
  EcrAwsAccountID:
    Description: AWS Account ID of Docker ECR repo
    Type: String
    Default: 385050320367
  DnsZone:
    Description: Application Load Balancer's DNS Zone Name
    Type: String
  CertificateArn:
    Description: ARN certificate for Load Balancer based on DNS ${ApplicationName}-${DeploymentEnv}.${DNSZone}
    Type: String
  PublicSecurityGroups:
    Description: Public List of security groups for the load balancer. TMGBase, APIGee, Cluster.
    Type: String
  PrivateSecurityGroups:
    Description: Private List of security groups for the load balancer. TMGBase, Cluster.
    Type: String
  PrivateSubnetList:
    Description: Private Subnet List
    Type: String
    Default: ''
  PublicSubnetList:
    Description: Public Subnet List
    Type: String
    Default: ''
  IsPublic:
    Description: Flag that sets the loadbalancer private/public.
    Type: String
    Default: true
    AllowedValues:
      - false
      - true

Conditions:
  IsEcsPublic: !Equals [true, !Ref IsPublic]

Resources:
  ECSCluster:
    Type: Custom::StackDependency
    Properties:
        ServiceToken: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:aws-resources-stack-dependencies
        StackName: !Ref EnvECSClusterStack
  ECSService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-${AWS::Region}.amazonaws.com/${CloudFormationBucket}/${CloudFormationCommonKey}/v2/template-common-ecs.yaml
      Parameters:
        ApplicationName: !Ref ApplicationName
        DeploymentEnv: !Ref DeploymentEnv
        CloudFormationBucket: !Ref CloudFormationBucket
        CloudFormationCommonKey: !Ref CloudFormationCommonKey
        BuildImage: !Ref ApplicationName
        BuildVersion: !Ref BuildVersion
        TaskCpuAllocation: !Ref NotificationTaskCpuAllocation
        TaskMemoryAllocation: !Ref NotificationTaskMemoryAllocation
        DesiredCount: !Ref NotificationDesiredCount
        DeregistrationDelay: !Ref DeregistrationDelay

        VpcId: !Ref VpcId
        DnsZone: !Ref DnsZone
        CertificateArn: !Ref CertificateArn
        SecurityGroups: !If [IsEcsPublic, !Ref PrivateSecurityGroups, !Ref PrivateSecurityGroups]
        SubnetList: !If [IsEcsPublic, !Ref PublicSubnetList, !Ref PrivateSubnetList]
        IsECSServicePublic: !Ref IsPublic

        ECSClusterPhysicalId: !GetAtt ECSCluster.EnvironmentECSClusterID
        ContainerPort: 9000
        DeploymentConfigMaxPercent: 200
        DeploymentConfigMinPercent: 50
        TaskRoleArn: !Ref ECSServiceTaskRole
        AccountId: !Ref EcrAwsAccountID
      TimeoutInMinutes: 15
    DependsOn: 
      - ECSServiceTaskRole

  ECSServiceTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ApplicationName}-${DeploymentEnv}-execution-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole

  ECSServiceErrorMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "{$.logLevel=\"ERROR\"}"
      LogGroupName: !GetAtt ECSService.Outputs.LogGroupName
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: !Ref ApplicationName
          MetricName: error
    DependsOn:
      - ECSService

  ECSServiceAlarmError:
    Type: AWS::CloudWatch::Alarm
    Properties:
        AlarmActions:
          - !Ref EmailingList
        AlarmDescription: Send error msg to the slack channel
        AlarmName: !Sub ${ApplicationName}-${DeploymentEnv}-alarm
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        MetricName: error
        Namespace: !Ref ApplicationName
        Period: 60
        Statistic: Sum
        Threshold: 1
    DependsOn:
      - ECSServiceErrorMetric

Outputs:
  ApplicationName:
    Value: !Ref ApplicationName
  DeploymentEnv:
    Value: !Ref DeploymentEnv
  CloudFormationBucket:
    Value: !Ref CloudFormationBucket
  CloudFormationKey:
    Value: !Ref CloudFormationKey
  CloudFormationCommonKey:
    Value: !Ref CloudFormationCommonKey
  BuildVersion:
    Value: !Ref BuildVersion
  NotificationTaskMemoryAllocation:
    Value: !Ref NotificationTaskMemoryAllocation
  NotificationDesiredCount:
    Value: !Ref NotificationDesiredCount
  EnvECSClusterStack:
    Value: !Ref EnvECSClusterStack
  VpcId:
    Value: !Ref VpcId
